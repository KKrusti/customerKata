plugins {
    id 'org.springframework.boot'
    id 'maven-publish'
    id 'java'
    id 'jacoco'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

dependencies {
    implementation(
        'org.springframework.boot:spring-boot-starter-web:2.5.5',
        'org.projectlombok:lombok:1.18.6',
        'org.springframework.data:spring-data-jpa:2.2.1.RELEASE',
        'com.h2database:h2:1.4.192',
        "org.mapstruct:mapstruct:${gradle.mapstructVersion}",
        "org.springframework.boot:spring-boot-starter-data-jpa",
        "io.springfox:springfox-boot-starter:${gradle.springfoxVersion}",
        'javax.validation:validation-api:2.0.1.Final',
        'javax.persistence:javax.persistence-api:2.2')
    compileOnly "org.projectlombok:lombok:${gradle.lombokVersion}"
    annotationProcessor(
        "org.projectlombok:lombok:${gradle.lombokVersion}",
        "org.mapstruct:mapstruct-processor:${gradle.mapstructVersion}")
    testImplementation(
        'org.springframework.boot:spring-boot-starter-test:2.5.5',
        "io.rest-assured:rest-assured:4.1.1",
        "io.rest-assured:json-path:4.0.0",
        'org.junit.jupiter:junit-jupiter-api',
        "io.rest-assured:xml-path:4.0.0",
        'io.micrometer:micrometer-core:1.8.2',
        "org.mapstruct:mapstruct-processor:${gradle.mapstructVersion}",
        "com.h2database:h2:1.4.192")
}

test {
    useJUnitPlatform()
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'customerkata'
sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

springBoot {
    buildInfo {
        properties {
            additional = [
                'operatingSystem': "${System.properties['os.name']} (${System.properties['os.version']})",
                'JVM'            : "${System.properties['java.vendor']} (${System.properties['java.version']})"
            ]
        }
    }
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/src/main/java"
        }
    }
}
